##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration

upstream app_backend {
        server mimir-1:3000;
        server mimir-2:3000;
        server mimir-3:3000;
}

upstream news_backend {
        server mimir-1:5050;
        server mimir-2:5050;
        server mimir-3:5050;
}

upstream search_backend {
        server mimir-1:7000;
        server mimir-2:7000;
        server mimir-3:7000;
}

upstream price_backend {
        server mimir-1:4000;
        server mimir-2:4000;
        server mimir-3:4000;
}

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	index index.html index.htm index.nginx-debian.html;

	ssl_dhparam /etc/ssl/certs/dhparam.pem;

	server_name mimir.news www.mimir.news;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/mimir.news/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/mimir.news/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

        location /api/app {
            proxy_pass   http://app_backend;
        }

        location /api/news {
            proxy_pass   http://news_backend;
        }

        location /api/search {
            proxy_pass   http://search_backend;
        }

        location /api/price {
            proxy_path   http://price_backend;
        }

	      # Redirect non-https traffic to https
        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        } # managed by Certbot

}
